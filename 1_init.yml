- name: Install base packages
  hosts: all, localhost
  tasks:
    - name: Update repositories cache and install packages
      apt:
        name:
          - git
          - zsh
          - tmux
          - open-vm-tools
          - curl
          - openvpn
          - mosh
          - golang
          - pipenv
          - python3-pip
          - ttyrec
          - neofetch
          - htop
          - python
          - python3
          - build-essential
          - fswatch
          - xsltproc
          - smbclient
          - cifs-utils
          - nfs-common
          - mc
          - ranger
          - openssh-server
          - nmap
          - masscan
          - ldap-utils
          - net-tools
          - jq
          - nikto
          - binwalk
          - dos2unix
          - john
          - libcurl4-openssl-dev
          - make
          - zlib1g-dev
          - gawk
          - g++
          - gcc
          - libreadline6-dev
          - libssl-dev
          - libyaml-dev
          - libsqlite3-dev
          - sqlite3
          - autoconf
          - libgdbm-dev
          - libncurses5-dev
          - automake
          - libtool
          - bison
          - pkg-config
          - proxychains
          - sshuttle
          - tcpdump
          - whois
          - aptitude
          - apt-transport-https
          - ca-certificates
          - software-properties-common
          - virtualenv
          - python3-setuptools
          - pssh
          - imagemagick
          - expect
          - fdupes
          - unzip
          - p7zip-full
          - sqlmap
          - nload
          - minicom
          - socat
          - gnupg
          - libpq-dev
          - libpcap0.8-dev
          - libxml2-dev
          - libxslt1-dev
          - exiftool
          - python-dev
          - antiword
          - unrtf
          - poppler-utils
          - pstotext
          - tesseract-ocr
          - flac
          - ffmpeg
          - lame
          - libmad0
          - libsox-fmt-mp3
          - sox
          - libjpeg-dev
          - swig
          - python3-testresources
          - libusb-1.0-0
          - libpcap-dev
          - libnetfilter-queue-dev
          - fping
          - grc
          - autossh
        update_cache: yes

    - name: Set up authorized_keys for the root user
      authorized_key: user=root key="{{ item }}"
      with_file:
        - files/keys/b-id_rsa.pub

    - name: Set up authorized_keys for the root user
      authorized_key: user=root key="{{ item }}"
      with_file:
        - files/keys/z-id_rsa.pub

    - name: Get GPG keys for RVM install package
      shell: gpg --keyserver hkp://pool.sks-keyservers.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB

    - name: Install RVM
      shell: curl -sSL https://get.rvm.io | bash -s stable
      args:
        warn: false

    - name: Clone Repository
      git:
        repo: https://github.com/rapid7/metasploit-framework
        dest: "/opt/metasploit"

    - name: Install Ruby
      shell: |
        source /etc/profile.d/rvm.sh
        rvm install ruby-`(cat .ruby-version)`
        gem install bundler
        bundle install
        gem install wpscan
        gem install evil-winrm
      args:
        chdir: "/opt/metasploit"
        executable: /usr/bin/zsh

    - name: Clone Repository
      git:
        repo: https://github.com/urbanadventurer/WhatWeb.git
        dest: "/opt/whatweb"

    - name: Install Whatweb
      shell: bundle install
      args:
        chdir: "/opt/whatweb"

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Update apt and install docker-ce
      apt: update_cache=yes name=docker-ce state=latest

    - name: Install Docker Module for Python
      pip:
        name: docker

    - name: Install Updog
      pip:
        name: updog

    - name: Install textract
      pip:
        name: textract

    - name: Clone oh-my-zsh repo
      git: repo=https://github.com/robbyrussell/oh-my-zsh.git dest=/root/.oh-my-zsh

    - name: Clone zsh-autosuggestions
      git: repo=https://github.com/zsh-users/zsh-autosuggestions dest=/root/.oh-my-zsh/custom/plugins/zsh-autosuggestions

    - name: Clone zsh-autoswitch-virtualenv 
      git: repo=https://github.com/MichaelAquilina/zsh-autoswitch-virtualenv dest=/root/.oh-my-zsh/custom/plugins/autoswitch_virtualenv

    - name: Clone zsh-z
      git: repo=https://github.com/agkozak/zsh-z dest=/root/.oh-my-zsh/custom/plugins/zsh-z

    - name: Clone Powerlevel10k
      git: repo=https://github.com/romkatv/powerlevel10k.git dest=/root/.oh-my-zsh/custom/themes/powerlevel10k depth=1

    - name: remove standard zshrc
      file: path=/root/.zshrc state=absent

    - name: deploy .zshrc
      copy: src=confs/zshrc dest=/root/.zshrc owner=root

    - name: Copy Custom P10K Config
      copy: src=confs/p10k.zsh dest=/root/.p10k.zsh owner=root

    - name: Set zsh as default shell
      user: name=root shell=/bin/zsh

    - name: Clone OhMyTmux
      git: repo=https://github.com/gpakosz/.tmux.git dest=/root/.tmux

    - name: Setup OhMyTmux
      file: path=/root/.tmux.conf
        src=/root/.tmux/.tmux.conf
        state=link
        force=yes

    - name: Copy Custom Tmux Config
      copy: src=confs/tmux.conf.local dest=/root/.tmux.conf.local owner=root

    ##### SECLISTS
    - name: Clone SecLists
      git: repo=https://github.com/danielmiessler/SecLists.git dest=/opt/seclists force=yes

    ##### RESPONDER
    - name: Clone Responder
      git: repo=https://github.com/lgandx/Responder dest=/opt/responder

    - name: Clone SIET
      git: repo=https://github.com/Sab0tag3d/SIET dest=/opt/siet

    - name: Clone onesixtyone
      git: repo=https://github.com/trailofbits/onesixtyone dest=/opt/onesixtyone    

    - name: Clone John
      git: repo=https://github.com/magnumripper/JohnTheRipper dest=/opt/john    

    - name: Clone GitTools
      git: repo=https://github.com/internetwache/GitTools dest=/opt/gittools 

    - name: Clone CVE-2020-0688
      git: repo=https://github.com/zcgonvh/CVE-2020-0688.git dest=/opt/owa-ecp 

    - name: Clone Invoke-WCMDump
      git: repo=https://github.com/peewpw/Invoke-WCMDump.git dest=/opt/wcmdump

    - name: Clone ExploitDB
      git: repo=https://github.com/offensive-security/exploitdb.git dest=/opt/exploitdb

    - name: Clone TestSSl
      git: repo=https://github.com/drwetter/testssl.sh.git dest=/opt/testssl.sh depth=1

    - name: Get Gobuster, Gowitness, & Others
      shell: |
        go get github.com/OJ/gobuster
        go get -u github.com/sensepost/gowitness
        go get github.com/bennettwarner/ChadTunnel
        go get -u github.com/atredispartners/flamingo
        go get github.com/mailhog/MailHog
        go get github.com/asciimoo/wuzz
        go get -u github.com/tomnomnom/httprobe

    - name: Get Latest Chromium
      git: repo=https://github.com/scheib/chromium-latest-linux.git dest=/opt/chromium

    - name: Install Chromium
      shell: bash /opt/chromium/update.sh

    - name: Clone Nmap Bootstrap
      git: repo=https://github.com/honze-net/nmap-bootstrap-xsl.git dest=/opt/nmap-bootstrap

    - name: Disable Auto-updates
      shell: sed -i 's/Upgrade \"1\"/Upgrade \"0\"/' /etc/apt/apt.conf.d/20auto-upgrades
      args:
        warn: no

    - name: Get Amass Binary
      shell: curl -s https://api.github.com/repos/OWASP/Amass/releases/latest | grep "browser_download_url.*amass_linux_amd64.zip" | cut -d '"' -f 4
      register: "download_url"
      args:
        warn: no

    - name: Download latest Amass release
      get_url:
        url: "{{ download_url.stdout }}"
        dest: /opt/amass_linux_amd64.zip
        tmp_dest: /tmp/
        force: yes
        headers:
          Accept: "application/octet-stream"

    - name: Extract Amass
      unarchive:
        src: /opt/amass_linux_amd64.zip
        dest: /opt/

    - name: Delete Zip
      file:
        path: /opt/amass_linux_amd64.zip
        state: absent

    - name: Download terraform release
      get_url:
        url: https://releases.hashicorp.com/terraform/0.12.26/terraform_0.12.26_linux_amd64.zip
        dest: /opt/terraform.zip
        tmp_dest: /tmp/
        force: yes
        headers:
          Accept: "application/octet-stream"

    - name: Extract terraform
      unarchive:
        src: /opt/terraform.zip
        dest: /opt/

    - name: Delete Zip
      file:
        path: /opt/terraform.zip
        state: absent

    - name: create cme dir
      file:
        path: /opt/crackmapexec
        state: directory

    - name: Copy CrackMapExec Binary
      copy: src=binaries/crackmapexec/cme dest=/opt/crackmapexec/cme owner=root

    - name: Copy CrackMapExec Binary
      copy: src=binaries/crackmapexec/cmedb dest=/opt/crackmapexec/cmedb owner=root

    - name: Making CME Executable
      file: dest=/opt/crackmapexec/cme mode=a+x

    - name: Making CMEDB Executable
      file: dest=/opt/crackmapexec/cmedb mode=a+x

    - name: Install Proxy.py
      pip:
        name: proxy.py

    - name: Install NodeJS & Mono Repos
      shell: |
        curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -
        sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
        echo "deb https://download.mono-project.com/repo/ubuntu stable-focal main" | sudo tee /etc/apt/sources.list.d/mono-official-stable.list
      args:
        warn: no

    - name: Install Nodejs & Mono
      apt:
        name:
          - nodejs
          - mono-complete
          - msbuild
          - mono-roslyn
        update_cache: yes

    - name: Install "TLDR" node.js package globally.
      npm:
        name: tldr
        global: yes

    - name: Install Linux Smart Enumeration
      git: repo=https://github.com/diego-treitos/linux-smart-enumeration.git dest=/opt/linux-smart-enumeration

    - name: Install Nmap-Parse-Output
      git: repo=https://github.com/ernw/nmap-parse-output.git dest=/opt/nmap-parse-output

    - name: Install Evilginx2-Modded
      git: repo=https://github.com/hash3liZer/evilginx2.git dest=/opt/evilginx2

    - name: Get GoPhish Binary
      shell: curl -s https://api.github.com/repos/gophish/gophish/releases/latest | grep "browser_download_url.*linux-64bit.zip" | cut -d '"' -f 4
      register: "download_url"
      args:
        warn: no

    - name: Download latest GoPhish release
      get_url:
        url: "{{ download_url.stdout }}"
        dest: /opt/gophish.zip
        tmp_dest: /tmp/
        force: yes
        headers:
          Accept: "application/octet-stream"

    - name: create gophish dir
      file:
        path: /opt/gophish
        state: directory

    - name: Extract GoPhish
      unarchive:
        src: /opt/gophish.zip
        dest: /opt/gophish/

    - name: Delete Zip
      file:
        path: /opt/gophish.zip
        state: absent

    - name: Get Ruler Binary
      shell: curl -s https://api.github.com/repos/sensepost/ruler/releases/latest | grep "browser_download_url.*ruler-linux64" | cut -d '"' -f 4
      register: "download_url"
      args:
        warn: no

    - name: Download latest Ruler release
      get_url:
        url: "{{ download_url.stdout }}"
        dest: /opt/ruler-linux64
        tmp_dest: /tmp/
        force: yes
        headers:
          Accept: "application/octet-stream"

    - name: Making Ruler Executable
      file: dest=/opt/ruler-linux64 mode=a+x

    - name: Clone Spraying Toolkit Repo
      git:
        repo: https://github.com/byt3bl33d3r/SprayingToolkit
        dest: "/opt/sprayingtoolkit"

    - name: Install Spraying Toolkit via pipenv
      shell: pipenv install --python 3.8
      args:
        chdir: "/opt/sprayingtoolkit"

    - name: Clone Impacket repo
      git:
        repo: https://github.com/SecureAuthCorp/impacket
        dest: "/opt/impacket"

    - name: Install Impacket via pipenv
      shell: |
        pipenv install --python 3.8
        pipenv run python3 setup.py install
      args:
        chdir: "/opt/impacket"

    - name: Clone WafW00f repo
      git:
        repo: https://github.com/EnableSecurity/wafw00f.git
        dest: "/opt/wafw00f"

    - name: Install WafW00f via pipenv
      shell: |
        pipenv install --python 3.8
        pipenv run python3 setup.py install
      args:
        chdir: "/opt/wafw00f"

    - name: Clone Arjun repo
      git:
        repo: https://github.com/s0md3v/Arjun.git
        dest: "/opt/arjun"

    - name: Clone XSStrike repo
      git:
        repo: https://github.com/s0md3v/XSStrike.git
        dest: "/opt/xsstrike"

    - name: Install XSStrike via pipenv
      shell: |
        pipenv install --python 3.8
        pipenv run pip3 install -r requirements.txt
      args:
        chdir: "/opt/xsstrike"

    - name: Clone SQLMap repo
      git:
        repo: https://github.com/sqlmapproject/sqlmap.git
        dest: "/opt/sqlmap"

    - name: Clone Bloodhound.py repo
      git:
        repo: https://github.com/fox-it/BloodHound.py
        dest: "/opt/bloodhound.py"

    - name: Install Bloodhound.py via pipenv
      shell: |
        pipenv install --python 3.8
        pipenv run python3 setup.py install
      args:
        chdir: "/opt/bloodhound.py"

    - name: Clone MITM6 repo
      git:
        repo: https://github.com/fox-it/mitm6
        dest: "/opt/mitm6"

    - name: Install MITM6 via pipenv
      shell: |
        pipenv install --python 3.8
        pipenv run python3 setup.py install
      args:
        chdir: "/opt/mitm6"

    - name: Clone krbrelayx Repo
      git:
        repo: https://github.com/dirkjanm/krbrelayx.git
        dest: "/opt/krbrelayx"

    - name: Install krbrelayx via pipenv
      shell: |
        pipenv install --python 3.8
        pipenv run pip3 install ldap3
        pipenv run pip3 install impacket
      args:
        chdir: "/opt/krbrelayx"

    - name: Clone PrivExchange Repo
      git:
        repo: https://github.com/dirkjanm/PrivExchange.git
        dest: "/opt/privexchange"

    - name: Install PrivExchange via pipenv
      shell: |
        pipenv install --python 3.8
        pipenv run pip3 install -r requirements.txt
        pipenv run pip3 install impacket
      args:
        chdir: "/opt/privexchange"

    - name: Clone ActiveReign Repo
      git:
        repo: https://github.com/m8r0wn/ActiveReign.git
        dest: "/opt/activereign"

    - name: Install ActiveReign via pipenv
      shell: |
        pipenv install --python 3.8
        pipenv run python3 setup.py install
      args:
        chdir: "/opt/activereign"

    - name: Clone PayloadAllTheThings
      git: repo=https://github.com/swisskyrepo/PayloadsAllTheThings.git dest=/opt/payloadallthethings

    - name: Clone Enum4Linux
      git: repo=https://github.com/portcullislabs/enum4linux.git dest=/opt/enum4linux

    - name: Get Hashcat Binary
      shell: curl -s https://api.github.com/repos/hashcat/hashcat/releases/latest | grep "browser_download_url.*.7z" | cut -d '"' -f 4
      register: "download_url"
      args:
        warn: no

    - name: Create hashcat dir
      file:
        path: /opt/hashcat
        state: directory
        mode: "0755"

    - name: Download latest Hashcat release
      get_url:
        url: "{{ download_url.stdout }}"
        dest: /opt/hashcat/hashcat.7z
        tmp_dest: /tmp/
        force: yes
        headers:
          Accept: "application/octet-stream"

    - name: Get Hashcat-Utils
      shell: curl -s https://api.github.com/repos/hashcat/hashcat-utils/releases/latest | grep "browser_download_url.*.7z" | cut -d '"' -f 4
      register: "download_url"
      args:
        warn: no

    - name: Download latest Hashcat release
      get_url:
        url: "{{ download_url.stdout }}"
        dest: /opt/hashcat/hashcat-utils.7z
        tmp_dest: /tmp/
        force: yes
        headers:
          Accept: "application/octet-stream"

    - name: Install modules via PIP
      pip:
        name:
          - ldap3
          - dnspython
          - ldapdomaindump
          - roadrecon
          - adidnsdump

    - name: Clone sysadmin tools
      git: repo=https://github.com/skx/sysadmin-util dest=/opt/sysadmin-util

    - name: Create sliver dir
      file:
        path: /opt/sliver
        state: directory
        mode: "0755"

    - name: Get Sliver-Server Binary
      shell: curl -s https://api.github.com/repos/BishopFox/sliver/releases/latest | grep "browser_download_url.*sliver-server_linux.zip" | cut -d '"' -f 4
      register: "download_url"
      args:
        warn: no

    - name: Download latest Sliver-Server release
      get_url:
        url: "{{ download_url.stdout }}"
        dest: /opt/sliver-server.zip
        tmp_dest: /tmp/
        force: yes
        headers:
          Accept: "application/octet-stream"

    - name: Extract Sliver-Server
      unarchive:
        src: /opt/sliver-server.zip
        dest: /opt/sliver/

    - name: Delete Zip
      file:
        path: /opt/sliver-server.zip
        state: absent

    - name: Get Sliver-Client Binary
      shell: curl -s https://api.github.com/repos/BishopFox/sliver/releases/latest | grep "browser_download_url.*sliver-client_linux.zip" | cut -d '"' -f 4
      register: "download_url"
      args:
        warn: no

    - name: Download latest Sliver-Client release
      get_url:
        url: "{{ download_url.stdout }}"
        dest: /opt/sliver-client.zip
        tmp_dest: /tmp/
        force: yes
        headers:
          Accept: "application/octet-stream"

    - name: Extract Sliver-Client
      unarchive:
        src: /opt/sliver-client.zip
        dest: /opt/sliver/

    - name: Delete Zip
      file:
        path: /opt/sliver-client.zip
        state: absent

    - name: Clone BloodHound
      git: repo=https://github.com/BloodHoundAD/BloodHound.git dest=/opt/bloodhound

    - name: Clone NTLMRelayX-Prettyloot
      git: repo=https://github.com/mpgn/ntlmrelayx-prettyloot.git dest=/opt/ntlmrelayx-prettyloot

    - name: Clone DirSearch
      git: repo=https://github.com/maurosoria/dirsearch.git dest=/opt/dirsearch

    - name: Clone Sublister
      git: repo=https://github.com/aboul3la/Sublist3r.git dest=/opt/sublist3r

    - name: Install ActiveReign via pipenv
      shell: pip3 install -r requirements.txt
      args:
        chdir: "/opt/sublist3r"

    - name: Clone hash-identifier
      git: repo=https://github.com/blackploit/hash-identifier.git dest=/opt/hash-identifier

    - name: Clone sharpsploit
      git: repo=https://github.com/cobbr/SharpSploit.git dest=/opt/sharpsploit

    - name: Clone powersploit
      git: repo=https://github.com/PowerShellMafia/PowerSploit.git dest=/opt/powersploit

    - name: Clone GhostpackCompiled
      git: repo=https://github.com/r3motecontrol/Ghostpack-CompiledBinaries.git dest=/opt/ghostpack

    - name: Get Bettercap Binary
      shell: curl -s https://api.github.com/repos/bettercap/bettercap/releases/latest | grep -E "browser_download_url.*?bettercap_linux_amd64_v.*?zip" | cut -d '"' -f 4
      register: "download_url"
      args:
        warn: no

    - name: Download latest Bettercap release
      get_url:
        url: "{{ download_url.stdout }}"
        dest: /opt/bettercap.zip
        tmp_dest: /tmp/
        force: yes
        headers:
          Accept: "application/octet-stream"

    - name: Extract Bettercap
      unarchive:
        src: /opt/bettercap.zip
        dest: /opt/

    - name: Delete Zip
      file:
        path: /opt/bettercap.zip
        state: absent

    - name: Clone DPAT
      git: repo=https://github.com/bennettwarner/DPAT.git dest=/opt/dpat

    - name: Get IPranger Binary
      shell: curl -s https://api.github.com/repos/bennettwarner/ipranger/releases/latest | grep "browser_download_url.*ipranger" | cut -d '"' -f 4
      register: "download_url"
      args:
        warn: no

    - name: Download latest IPranger release
      get_url:
        url: "{{ download_url.stdout }}"
        dest: /opt/ipranger
        tmp_dest: /tmp/
        force: yes
        headers:
          Accept: "application/octet-stream"

    - name: Making IPranger Executable
      file: dest=/opt/ipranger mode=a+x

    - name: Clone DNSRecon Repo
      git:
        repo: https://github.com/darkoperator/dnsrecon.git
        dest: "/opt/dnsrecon"

    - name: Install DNSRecon via pipenv
      shell: |
        pipenv install --python 3.8
      args:
        chdir: "/opt/dnsrecon"

    - name: Get Aquatone Binary
      shell: curl -s https://api.github.com/repos/michenriksen/aquatone/releases/latest | grep "browser_download_url.*aquatone_linux_amd64*" | cut -d '"' -f 4
      register: "download_url"
      args:
        warn: no

    - name: Download latest Aquatone release
      get_url:
        url: "{{ download_url.stdout }}"
        dest: /opt/aquatone.zip
        tmp_dest: /tmp/
        force: yes
        headers:
          Accept: "application/octet-stream"

    - name: Extract Aquatone
      unarchive:
        src: /opt/aquatone.zip
        dest: /opt/

    - name: Delete Zip
      file:
        path: /opt/aquatone.zip
        state: absent

    - name: Delete Readme
      file:
        path: /opt/README.md
        state: absent

    - name: Delete License
      file:
        path: /opt/LICENSE.txt
        state: absent

    - name: Delete Sha
      shell: |
        rm *.sha256
      args:
        chdir: "/opt"
        warn: no

    - name: Clone Metagoofil Repo
      git:
        repo: https://github.com/opsdisk/metagoofil.git
        dest: "/opt/metagoofil"

    - name: Install Metagoofil via pipenv
      shell: |
        pipenv install --python 3.8
      args:
        chdir: "/opt/metagoofil"

    - name: Clone PCredz Repo
      git:
        repo: https://github.com/lgandx/PCredz.git
        dest: "/opt/pcredz"

    - name: Install PCredz via pipenv
      shell: |
        pipenv install --python 3.8
        pipenv run pip3 install Cython
        pipenv run pip3 install python-libpcap
      args:
        chdir: "/opt/pcredz"

    - name: Clone Cloudfail Repo
      git:
        repo: https://github.com/m0rtem/CloudFail.git
        dest: "/opt/cloudfail"

    - name: Install Cloudfail via pipenv
      shell: |
        pipenv install --python 3.8
      args:
        chdir: "/opt/cloudfail"

    - name: Clone UhOh365
      git: repo=https://github.com/Raikia/UhOh365.git dest=/opt/uhoh365

    - name: Clone Eavesarp Repo
      git:
        repo: https://github.com/bennettwarner/eavesarp.git
        dest: "/opt/eavesarp"

    - name: Install eavesarp via pipenv
      shell: |
        pipenv install --python 3.8
      args:
        chdir: "/opt/eavesarp"

    - name: Copy Nessus Installer
      copy: src=installers/Nessus-8.10.1-ubuntu1110_amd64.deb dest=/opt/Nessus-8.10.1-ubuntu1110_amd64.deb owner=root

    - name: Setup Links
      file: path=/usr/bin/msfconsole
        src=/opt/metasploit/msfconsole
        state=link
    
    - name: Setup Links
      file: path=/usr/bin/msfupdate
        src=/opt/metasploit/msfupdate
        state=link
    
    - name: Setup Links
      file: path=/usr/bin/msfdb
        src=/opt/metasploit/msfdb
        state=link

    - name: Setup Links
      file: path=/usr/bin/msfvenom
        src=/opt/metasploit/msfvenom
        state=link

    - name: Setup Links
      file: path=/usr/bin/cme
        src=/opt/crackmapexec/cme
        state=link

    - name: Setup Links
      file: path=/usr/bin/cmedb
        src=/opt/crackmapexec/cmedb
        state=link

    - name: Setup Links
      file: path=/usr/bin/testssl
        src=/opt/testssl.sh/testssl.sh
        state=link

    - name: Setup Links
      file: path=/usr/bin/responder
        src=/opt/responder/Responder.py
        state=link

    - name: Setup Links
      file: path=/usr/bin/amass
        src=/opt/amass_linux_amd64/amass
        state=link

    - name: Setup Links
      file: path=/usr/bin/terraform
        src=/opt/terraform
        state=link

    - name: Setup Links
      file: path=/usr/bin/ruler
        src=/opt/ruler-linux64
        state=link

    - name: Setup Links
      file: path=/usr/bin/ipranger
        src=/opt/ipranger
        state=link

    - name: Setup Links
      file: path=/usr/bin/aquatone
        src=/opt/aquatone
        state=link

    - name: Setup Links
      file: path=/usr/bin/bettercap
        src=/opt/bettercap
        state=link

    - name: Setup Links
      file: path=/usr/bin/ipranger
        src=/opt/ipranger
        state=link

    - name: Setup Links
      file: path=/usr/bin/dirsearch
        src=/opt/dirsearch/dirsearch.py
        state=link

    - name: Setup Links
      file: path=/usr/bin/dnsrecon
        src=/opt/dnsrecon/dnsrecon.py
        state=link

    - name: Setup Links
      file: path=/usr/bin/enum4linux
        src=/opt/enum4linux/enum4linux.pl
        state=link

    - name: Setup Links
      file: path=/usr/bin/searchsploit
        src=/opt/exploitdb/searchsploit
        state=link

    - name: Setup Links
      file: path=/usr/bin/nmap-parse
        src=/opt/exploitdb/nmap-parse-output/nmap-parse-output
        state=link

    - name: Setup Links
      file: path=/usr/bin/siet
        src=/opt/siet/siet.py
        state=link

    - name: Setup Links
      file: path=/usr/bin/sliver-server
        src=/opt/sliver/sliver-server
        state=link

    - name: Setup Links
      file: path=/usr/bin/sliver-client
        src=/opt/sliver/sliver-client
        state=link

    - name: Setup Links
      file: path=/usr/bin/sprayingtoolkit
        src=/opt/sprayingtoolkit/atomizer.py
        state=link

    - name: Setup Links
      file: path=/usr/bin/sublist3r
        src=/opt/sublist3r/sublist3r.py
        state=link

    - name: Setup Links
      file: path=/usr/bin/cidr2ip
        src=/opt/sysadmin-util/cidr2ip
        state=link
