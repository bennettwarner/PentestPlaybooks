- name: Install base packages
  hosts: all, localhost
  tasks:
    - name: Update repositories cache and install packages
      apt:
        name:
          - git
          - zsh
          - tmux
          - open-vm-tools
          - curl
          - openvpn
          - mosh
          - golang
          - pipenv
          - python3-pip
          - ttyrec
          - neofetch
          - htop
          - python
          - python3
          - build-essential
          - fswatch
          - xsltproc
          - smbclient
          - cifs-utils
          - nfs-common
          - mc
          - ranger
          - openssh-server
          - nmap
          - masscan
          - ruby
          - ldap-utils
          - net-tools
          - jq
          - nikto
          - binwalk
          - dos2unix
          - john
          - libcurl4-openssl-dev
          - make
          - zlib1g-dev
          - gawk
          - g++
          - gcc
          - libreadline6-dev
          - libssl-dev
          - libyaml-dev
          - libsqlite3-dev
          - sqlite3
          - autoconf
          - libgdbm-dev
          - libncurses5-dev
          - automake
          - libtool
          - bison
          - pkg-config
          - ruby-bundler
          - ruby-dev
          - proxychains
          - sshuttle
          - tcpdump
          - whois
          - aptitude
          - apt-transport-https
          - ca-certificates
          - software-properties-common
          - virtualenv
          - python3-setuptools
          - pssh
          - imagemagick
          - expect
          - fdupes
          - unzip
          - p7zip-full
          - sqlmap
          - nload
          - minicom
          - socat
        update_cache: yes

    - name: Set up authorized_keys for the root user
      authorized_key: user=root key="{{ item }}"
      with_file:
        - files/keys/id_rsa.pub

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Update apt and install docker-ce
      apt: update_cache=yes name=docker-ce state=latest

    - name: Install Docker Module for Python
      pip:
        name: docker
    
    - name: Install Updog
      pip:
        name: updog
    
    - name: Clone oh-my-zsh repo
      git: repo=https://github.com/robbyrussell/oh-my-zsh.git dest=/root/.oh-my-zsh
    
    - name: Clone zsh-autosuggestions
      git: repo=https://github.com/zsh-users/zsh-autosuggestions dest=/root/.oh-my-zsh/custom/plugins/zsh-autosuggestions

    - name: Clone Powerlevel10k
      git: repo=https://github.com/romkatv/powerlevel10k.git dest=/root/.oh-my-zsh/custom/themes/powerlevel10k depth=1
    
    - name: remove standard zshrc
      file: path=/root/.zshrc state=absent

    - name: deploy .zshrc
      copy: src=confs/zshrc dest=/root/.zshrc owner=root

    - name: Copy Custom P10K Config
      copy: src=confs/p10k.zsh dest=/root/.p10k.zsh owner=root

    - name: Set zsh as default shell
      user: name=root shell=/bin/zsh

    - name: Clone OhMyTmux
      git: repo=https://github.com/gpakosz/.tmux.git dest=/root/.tmux

    - name: Setup OhMyTmux
      file: path=/root/.tmux.conf 
          src=/root/.tmux/.tmux.conf  
          state=link 
          force=yes
    
    - name: Copy Custom Tmux Config
      copy: src=confs/tmux.conf.local dest=/root/.tmux.conf.local owner=root
    
    ##### SECLISTS
    - name: Clone SecLists
      git: repo=https://github.com/danielmiessler/SecLists.git dest=/opt/seclists

    ##### RESPONDER
    - name: Clone Responder
      git: repo=https://github.com/lgandx/Responder dest=/opt/responder

    - name: Clone ExploitDB
      git: repo=https://github.com/offensive-security/exploitdb.git dest=/opt/exploitdb

    - name: Clone TestSSl
      git: repo=https://github.com/drwetter/testssl.sh.git dest=/opt/testssl.sh depth=1

    - name: Get Gobuster & Gowitness
      shell:  |
        go get github.com/OJ/gobuster
        go get -u github.com/sensepost/gowitness
        go get github.com/bennettwarner/ChadTunnel

    - name: Get Latest Chromium
      git: repo=https://github.com/scheib/chromium-latest-linux.git dest=/opt/chromium
    
    - name: Install Chromium
      shell: bash /opt/chromium/update.sh

    - name: Clone Nmap Bootstrap
      git: repo=https://github.com/honze-net/nmap-bootstrap-xsl.git dest=/opt/nmap-bootstrap    
      
    - name: Get Amass Binary
      shell: curl -s https://api.github.com/repos/OWASP/Amass/releases/latest | grep "browser_download_url.*amass_linux_amd64.zip" | cut -d '"' -f 4
      register: "download_url"
      warn: false

    - name: Download latest release
      get_url:
        url: "{{ download_url.stdout }}"
        dest: /opt/amass_linux_amd64.zip
        tmp_dest: /tmp/
        force: yes
        headers:
          Accept: "application/octet-stream"

    - name: Extract Amass
      unarchive:
        src: /opt/amass_linux_amd64.zip
        dest: /opt/
  
    - name: Delete Zip
      file:
        path: /opt/amass_linux_amd64.zip
        state: absent


    # - name: 
    #   git: repo= dest=/opt/

    # - name: 
    #   git: repo= dest=/opt/

    # - name: 
    #   git: repo= dest=/opt/