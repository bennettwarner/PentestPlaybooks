- name: Install base packages
  hosts: all, localhost
  tasks:
    - name: Update repositories cache and install packages
      apt:
        name:
          - git
          - zsh
          - tmux
          - zip
          - tree
          - open-vm-tools
          - open-vm-tools-desktop
          - curl
          - openvpn
          - openconnect
          - mosh
          - wireguard-tools
          - golang
          - pipenv
          - python3-pip
          - neofetch
          - htop
          - python
          - python3
          - build-essential
          - xsltproc
          - smbclient
          - cifs-utils
          - nfs-common
          - mc
          - ranger
          - openssh-server
          - ldap-utils
          - net-tools
          - jq
          - dos2unix
          - make
          - g++
          - gcc
          - autoconf
          - automake
          - proxychains
          - sshuttle
          - whois
          - virtualenv
          - python3-setuptools
          - expect
          - fdupes
          - unzip
          - p7zip-full
          - nload
          - minicom
          - socat
          - python3-testresources
          - fping
          - grc
          - autossh
          - docker.io
          - libpam0g-dev
          - libxcb-xkb-dev
          - cmake
          - pkg-config
          - libfreetype6-dev
          - libfontconfig1-dev
          - libxcb-xfixes0-dev
          - libssl-dev
        update_cache: yes

    - name: Set up authorized_keys for the root user
      authorized_key: user=root key="{{ item }}"
      with_file:
        - files/keys/b-id_rsa.pub

    - name: Set up authorized_keys for the root user
      authorized_key: user=root key="{{ item }}"
      with_file:
        - files/keys/z-id_rsa.pub

    - name: Install Updog
      pip:
        name: updog

    - name: Clone oh-my-zsh repo
      git: repo=https://github.com/robbyrussell/oh-my-zsh.git dest=/root/.oh-my-zsh

    - name: Clone zsh-autosuggestions
      git: repo=https://github.com/zsh-users/zsh-autosuggestions dest=/root/.oh-my-zsh/custom/plugins/zsh-autosuggestions

    - name: Clone zsh-autoswitch-virtualenv
      git: repo=https://github.com/MichaelAquilina/zsh-autoswitch-virtualenv dest=/root/.oh-my-zsh/custom/plugins/autoswitch_virtualenv

    - name: Clone zsh-z
      git: repo=https://github.com/agkozak/zsh-z dest=/root/.oh-my-zsh/custom/plugins/zsh-z

    - name: Clone Powerlevel10k
      git: repo=https://github.com/romkatv/powerlevel10k.git dest=/root/.oh-my-zsh/custom/themes/powerlevel10k depth=1

    - name: remove standard zshrc
      file: path=/root/.zshrc state=absent

    - name: deploy .zshrc
      copy: src=confs/zshrc dest=/root/.zshrc owner=root

    - name: Copy Custom P10K Config
      copy: src=confs/p10k.zsh dest=/root/.p10k.zsh owner=root

    - name: Set zsh as default shell
      user: name=root shell=/bin/zsh

    - name: Clone OhMyTmux
      git: repo=https://github.com/gpakosz/.tmux.git dest=/root/.tmux

    - name: Setup OhMyTmux
      file: path=/root/.tmux.conf
        src=/root/.tmux/.tmux.conf
        state=link
        force=yes

    - name: Copy Custom Tmux Config
      copy: src=confs/tmux.conf.local dest=/root/.tmux.conf.local owner=root

    - name: Get Latest Chromium
      git: repo=https://github.com/scheib/chromium-latest-linux.git dest=/opt/chromium

    - name: Install Chromium
      shell: bash /opt/chromium/update.sh

    - name: Disable Auto-updates
      shell: sed -i 's/Upgrade \"1\"/Upgrade \"0\"/' /etc/apt/apt.conf.d/20auto-upgrades
      args:
        warn: no

    - name: Install Proxy.py
      pip:
        name: proxy.py

    - name: Install Display Manager
      git: repo=https://github.com/nullgemm/ly.git dest=/opt/ly

    - name: Clone Dependencies for Ly
      make:
        chdir: /opt/ly
        target: github
    
    - name: Make Ly
      make:
        chdir: /opt/ly
    
    - name: Make Install Ly
      make:
        chdir: /opt/ly
        target: install

    - name: Install Desktop Environment
      apt:
        name:
          - xinit
          - openbox
          - obconf
          - firefox
          - xterm
          - gnome-terminal
          - nitrogen
          - tint2
          - remmina
          - filezilla
          - caja
          - gedit
          - lxappearance
          - flameshot
          - rofi
          - dunst
          - papirus-icon-theme
          - alsa-base
          - gconf2
          - dconf-cli
          - wmctrl
          - feh
          - imagemagick
          - i3lock-fancy
          - font-manager
          - file-roller
          - shotwell
    
    - name: Disable services if enabled
      shell: if systemctl is-enabled --quiet {{ item }}; then systemctl disable {{ item }} && echo disable_ok ; fi
      register: output
      changed_when: "'disable_ok' in output.stdout"
      loop:
        - gdm3

    - name: Remove wayland
      shell: apt purge -y ubuntu-session xwayland network-manager-gnome
      args:
        executable: /bin/bash
        warn: no

    - name: Enable Ly service
      systemd:
        name: ly.service
        enabled: yes

    - name: Install rust
      shell: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
      args:
        warn: no

    - name: Install cargo packages
      shell: |
        source $HOME/.cargo/env
        cargo install tealdeer lsd du-dust ripgrep ytop
      args:
        executable: /bin/bash
        warn: no

    - name: Update TLDR
      shell: |
        source $HOME/.cargo/env
        tldr --update
      args:
        executable: /bin/bash
        warn: no

    - name: Install PiCom Build Chain
      apt:
        name:
          - ninja-build
          - meson
          - libxext-dev
          - libxcb1-dev
          - libxcb-damage0-dev
          - libxcb-xfixes0-dev
          - libxcb-shape0-dev
          - libxcb-render-util0-dev
          - libxcb-render0-dev
          - libxcb-randr0-dev
          - libxcb-composite0-dev
          - libxcb-image0-dev
          - libxcb-present-dev
          - libxcb-xinerama0-dev
          - libxcb-glx0-dev
          - libpixman-1-dev
          - libdbus-1-dev
          - libconfig-dev
          - libgl1-mesa-dev
          - libpcre2-dev
          - libpcre3-dev
          - libevdev-dev 
          - uthash-dev
          - libev-dev
          - libx11-xcb-dev

    - name: Clone Picom
      git: repo=https://github.com/ibhagwan/picom.git dest=/opt/picom

    - name: Build and Install Picom
      shell: |
        git submodule update --init --recursive
        meson --buildtype=release . build
        ninja -C build
        ninja -C build install
      args:
        executable: /bin/bash
        warn: no
        chdir: /opt/picom

    - name: Setup Terminal Theme
      shell: dconf load /org/gnome/terminal/legacy/profiles:/ < ./gnome-terminal-profiles.dconf
      args:
        executable: /bin/bash
        warn: no
        chdir: ./files/confs

    - name: Install Polybar Buildchain
      apt:
        name:
          - cmake-data
          - python3-sphinx
          - python3-packaging
          - libcairo2-dev
          - libxcb1-dev
          - libxcb-util0-dev
          - libxcb-randr0-dev
          - libxcb-composite0-dev
          - python3-xcbgen
          - xcb-proto
          - libxcb-image0-dev
          - libxcb-ewmh-dev
          - libxcb-icccm4-dev
          - libxcb-xkb-dev
          - libxcb-xrm-dev
          - libxcb-cursor-dev
          - libasound2-dev
          - libpulse-dev
          - libjsoncpp-dev
          - libmpdclient-dev
          - libcurl4-openssl-dev
          - libnl-genl-3-dev

    - name: Clone Polybar
      git: repo=https://github.com/polybar/polybar.git dest=/opt/polybar recursive=yes

    - name: Build Polybar
      shell: |
        mkdir build
        cd build
        cmake ..
        make -j$(nproc)
        make install
      args:
        executable: /bin/bash
        warn: no
        chdir: /opt/polybar

    - name: Copy Confs
      shell: |
        cp -R .config ~
        cp -R .icons ~
        cp -R .themes ~
        cp -R .fonts ~
        cp -R .wallpapers ~
        cp -R .scripts ~
      args:
        executable: /bin/bash
        warn: no
        chdir: ./files/confs

    - name: Making bg_changer Executable
      file: dest=/root/.scripts/bg_changer.sh mode=a+x
    
    - name: Making rofi Executable
      file: dest=/root/.config/rofi/launch-rofi.sh mode=a+x
      
    - name: Clone xeventbind
      git: repo=https://github.com/bennettwarner/xeventbind.git dest=/opt/xeventbind

    - name: Build and Install xeventbind
      shell: |
        make
        make install
      args:
        executable: /bin/bash
        warn: no
        chdir: /opt/xeventbind
